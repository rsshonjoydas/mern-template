version: '3.8'

services:
  appserver:
    container_name: appserver
    restart: unless-stopped
    build:
      context: ./server
    ports:
      - 5000:5000
    env_file:
      - ./server/.env
    depends_on:
      - mongo
      - redis
    networks:
      - mydockernet

  appclient:
    container_name: appclient
    restart: unless-stopped
    build:
      context: ./client
    ports:
      - 3000:3000
    env_file:
      - ./client/.env.local
    depends_on:
      - appserver
    networks:
      - mydockernet

  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db
    networks:
      - mydockernet

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
    ports:
      - 8080:8081
    volumes:
      - mongo-express:/data/db
    networks:
      - mydockernet

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    networks:
      - mydockernet

  nginx:
    image: nginx:1.21.5-alpine
    container_name: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - appserver
      - appclient
    networks:
      - mydockernet

volumes:
  mongo:
  mongo-express:
  redis:

networks:
  mydockernet:
    driver: bridge
